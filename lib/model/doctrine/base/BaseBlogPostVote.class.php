<?php

/**
 * BaseBlogPostVote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_id
 * @property integer $author_id
 * @property BlogPost $Post
 * 
 * @method integer      getId()        Returns the current record's "id" value
 * @method integer      getPostId()    Returns the current record's "post_id" value
 * @method integer      getAuthorId()  Returns the current record's "author_id" value
 * @method BlogPost     getPost()      Returns the current record's "Post" value
 * @method BlogPostVote setId()        Sets the current record's "id" value
 * @method BlogPostVote setPostId()    Sets the current record's "post_id" value
 * @method BlogPostVote setAuthorId()  Sets the current record's "author_id" value
 * @method BlogPostVote setPost()      Sets the current record's "Post" value
 * 
 * @package    blog
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPostVote extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post_vote');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'unsigned' => true,
             'length' => 4,
             ));
        $this->hasColumn('post_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             'length' => 4,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BlogPost as Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}